---
properties:
  displayName: Allowed virtual machine SKUs
  policyType: BuiltIn
  mode: Indexed
  description: This policy enables you to specify a set of virtual machine SKUs that
    your organization can deploy.
  metadata:
    version: 1.0.0
    category: Compute
  parameters:
    listOfAllowedSKUs:
      type: Array
      metadata:
        description: The list of SKUs that can be specified for virtual machines.
        displayName: Allowed SKUs
        strongType: VMSKUs
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Compute/virtualMachines
      - not:
          field: Microsoft.Compute/virtualMachines/sku.name
          in: "[parameters('listOfAllowedSKUs')]"
    then:
      effect: Deny
id: "/providers/Microsoft.Authorization/policyDefinitions/cccc23c7-8427-4f53-ad12-b6a63eb452b3"
name: cccc23c7-8427-4f53-ad12-b6a63eb452b3
properties:
  displayName: Audit VMs that do not use managed disks
  policyType: BuiltIn
  mode: All
  description: This policy audits VMs that do not use managed disks
  metadata:
    version: 1.0.0
    category: Compute
  parameters: {}
  policyRule:
    if:
      anyOf:
      - allOf:
        - field: type
          equals: Microsoft.Compute/virtualMachines
        - field: Microsoft.Compute/virtualMachines/osDisk.uri
          exists: 'True'
      - allOf:
        - field: type
          equals: Microsoft.Compute/VirtualMachineScaleSets
        - anyOf:
          - field: Microsoft.Compute/VirtualMachineScaleSets/osDisk.vhdContainers
            exists: 'True'
          - field: Microsoft.Compute/VirtualMachineScaleSets/osdisk.imageUrl
            exists: 'True'
    then:
      effect: audit
id: "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d"
name: 06a78e20-9358-41c9-923c-fb736d382a4d
properties:
  displayName: Unattached disks should be encrypted
  policyType: BuiltIn
  mode: Indexed
  description: This policy audits any unattached disk without encryption enabled.
  metadata:
    version: 1.0.0
    category: Compute
  parameters:
    effect:
      type: string
      defaultValue: Audit
      allowedValues:
      - Audit
      - Disabled
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Compute/disks
      - field: Microsoft.Compute/disks/diskState
        equals: Unattached
      - anyOf:
        - field: Microsoft.Compute/disks/encryptionSettingsCollection.enabled
          exists: 'false'
        - field: Microsoft.Compute/disks/encryptionSettingsCollection.enabled
          equals: 'false'
    then:
      effect: "[parameters('effect')]"
id: "/providers/Microsoft.Authorization/policyDefinitions/2c89a2e5-7285-40fe-afe0-ae8654b92fb2"
name: 2c89a2e5-7285-40fe-afe0-ae8654b92fb2
properties:
  displayName: Only approved VM extensions should be installed
  policyType: BuiltIn
  mode: Indexed
  description: This policy governs the virtual machine extensions that are not approved.
  metadata:
    version: 1.0.0
    category: Compute
  parameters:
    effect:
      type: string
      defaultValue: Audit
      allowedValues:
      - Audit
      - Deny
      - Disabled
      metadata:
        displayName: Effect
        description: The effect determines what happens when the policy rule is evaluated
          to match
    approvedExtensions:
      type: Array
      metadata:
        description: 'The list of approved extension types that can be installed.
          Example: AzureDiskEncryption'
        displayName: Approved extensions
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Compute/virtualMachines/extensions
      - field: Microsoft.Compute/virtualMachines/extensions/type
        notIn: "[parameters('approvedExtensions')]"
    then:
      effect: "[parameters('effect')]"
id: "/providers/Microsoft.Authorization/policyDefinitions/c0e996f8-39cf-4af9-9f45-83fbde810432"
name: c0e996f8-39cf-4af9-9f45-83fbde810432
properties:
  displayName: Allowed locations
  policyType: BuiltIn
  mode: Indexed
  description: This policy enables you to restrict the locations your organization
    can specify when deploying resources. Use to enforce your geo-compliance requirements.
    Excludes resource groups, Microsoft.AzureActiveDirectory/b2cDirectories, and resources
    that use the 'global' region.
  metadata:
    version: 1.0.0
    category: General
  parameters:
    listOfAllowedLocations:
      type: Array
      metadata:
        description: The list of locations that can be specified when deploying resources.
        strongType: location
        displayName: Allowed locations
  policyRule:
    if:
      allOf:
      - field: location
        notIn: "[parameters('listOfAllowedLocations')]"
      - field: location
        notEquals: global
      - field: type
        notEquals: Microsoft.AzureActiveDirectory/b2cDirectories
    then:
      effect: deny
id: "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c"
name: e56962a6-4747-49cd-b67b-bf8b01975c4c
properties:
  displayName: An activity log alert should exist for specific Administrative operations
  description: This policy audits specific Administrative operations with no activity
    log alerts configured.
  policyType: BuiltIn
  mode: All
  metadata:
    version: 1.0.0
    category: Monitoring
  parameters:
    effect:
      type: String
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
      allowedValues:
      - AuditIfNotExists
      - Disabled
      defaultValue: AuditIfNotExists
    operationName:
      type: String
      metadata:
        displayName: Operation Name
        description: Administrative Operation name for which activity log alert should
          be configured
      allowedValues:
      - Microsoft.Sql/servers/firewallRules/write
      - Microsoft.Sql/servers/firewallRules/delete
      - Microsoft.Network/networkSecurityGroups/write
      - Microsoft.Network/networkSecurityGroups/delete
      - Microsoft.ClassicNetwork/networkSecurityGroups/write
      - Microsoft.ClassicNetwork/networkSecurityGroups/delete
      - Microsoft.Network/networkSecurityGroups/securityRules/write
      - Microsoft.Network/networkSecurityGroups/securityRules/delete
      - Microsoft.ClassicNetwork/networkSecurityGroups/securityRules/write
      - Microsoft.ClassicNetwork/networkSecurityGroups/securityRules/delete
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Resources/subscriptions
    then:
      effect: "[parameters('effect')]"
      details:
        type: Microsoft.Insights/ActivityLogAlerts
        existenceCondition:
          allOf:
          - field: Microsoft.Insights/ActivityLogAlerts/enabled
            equals: 'true'
          - count:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]
              where:
                anyOf:
                - allOf:
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
                    equals: category
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals
                    equals: Administrative
                - allOf:
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
                    equals: operationName
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals
                    equals: "[parameters('operationName')]"
            equals: 2
          - not:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
              equals: category
          - not:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
              equals: operationName
id: "/providers/Microsoft.Authorization/policyDefinitions/b954148f-4c11-4c38-8221-be76711e194a"
name: b954148f-4c11-4c38-8221-be76711e194a
properties:
  displayName: An activity log alert should exist for specific Security operations
  description: This policy audits specific Security operations with no activity log
    alerts configured.
  policyType: BuiltIn
  mode: All
  metadata:
    version: 1.0.0
    category: Monitoring
  parameters:
    effect:
      type: String
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
      allowedValues:
      - AuditIfNotExists
      - Disabled
      defaultValue: AuditIfNotExists
    operationName:
      type: String
      metadata:
        displayName: Operation Name
        description: Security Operation name for which activity log alert should exist
      allowedValues:
      - Microsoft.Security/policies/write
      - Microsoft.Security/securitySolutions/write
      - Microsoft.Security/securitySolutions/delete
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Resources/subscriptions
    then:
      effect: "[parameters('effect')]"
      details:
        type: Microsoft.Insights/ActivityLogAlerts
        existenceCondition:
          allOf:
          - field: Microsoft.Insights/ActivityLogAlerts/enabled
            equals: 'true'
          - count:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]
              where:
                anyOf:
                - allOf:
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
                    equals: category
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals
                    equals: Security
                - allOf:
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
                    equals: operationName
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals
                    equals: "[parameters('operationName')]"
            equals: 2
          - not:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
              equals: category
          - not:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
              equals: operationName
id: "/providers/Microsoft.Authorization/policyDefinitions/3b980d31-7904-4bb7-8575-5665739a8052"
name: 3b980d31-7904-4bb7-8575-5665739a8052
properties:
  displayName: An activity log alert should exist for specific Policy operations
  description: This policy audits specific Policy operations with no activity log
    alerts configured.
  policyType: BuiltIn
  mode: All
  metadata:
    version: 1.0.0
    category: Monitoring
  parameters:
    effect:
      type: String
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
      allowedValues:
      - AuditIfNotExists
      - Disabled
      defaultValue: AuditIfNotExists
    operationName:
      type: String
      metadata:
        displayName: Operation Name
        description: Policy Operation name for which activity log alert should exist
      allowedValues:
      - Microsoft.Authorization/policyAssignments/write
      - Microsoft.Authorization/policyAssignments/delete
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Resources/subscriptions
    then:
      effect: "[parameters('effect')]"
      details:
        type: Microsoft.Insights/ActivityLogAlerts
        existenceCondition:
          allOf:
          - field: Microsoft.Insights/ActivityLogAlerts
            exists: 'true'
          - field: Microsoft.Insights/ActivityLogAlerts/enabled
            equals: 'true'
          - count:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]
              where:
                anyOf:
                - allOf:
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
                    equals: category
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals
                    equals: Policy
                - allOf:
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
                    equals: operationName
                  - field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals
                    equals: "[parameters('operationName')]"
            equals: 2
          - not:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
              equals: category
          - not:
              field: Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field
              equals: operationName
id: "/providers/Microsoft.Authorization/policyDefinitions/c5447c04-a4d7-4ba8-a263-c9ee321a6858"
name: c5447c04-a4d7-4ba8-a263-c9ee321a6858
properties:
  displayName: Azure subscriptions should have a log profile for Activity Log
  policyType: BuiltIn
  mode: All
  description: This policy ensures if a log profile is enabled for exporting activity
    logs. It audits if there is no log profile created to export the logs either to
    a storage account or to an event hub.
  metadata:
    version: 1.0.0
    category: Monitoring
  parameters:
    effect:
      type: string
      defaultValue: AuditIfNotExists
      allowedValues:
      - AuditIfNotExists
      - Disabled
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
  policyRule:
    if:
      field: type
      equals: Microsoft.Resources/subscriptions
    then:
      effect: "[parameters('effect')]"
      details:
        type: Microsoft.Insights/logProfiles
        existenceCondition:
          field: Microsoft.Insights/logProfiles/categories
          exists: 'true'
id: "/providers/Microsoft.Authorization/policyDefinitions/7796937f-307b-4598-941c-67d3a05ebfe7"
name: 7796937f-307b-4598-941c-67d3a05ebfe7
properties:
  displayName: Azure Monitor should collect activity logs from all regions
  policyType: BuiltIn
  mode: All
  description: This policy audits the Azure Monitor log profile which does not export
    activities from all Azure supported regions including global.
  metadata:
    version: 1.0.0
    category: Monitoring
  parameters:
    effect:
      type: string
      defaultValue: AuditIfNotExists
      allowedValues:
      - AuditIfNotExists
      - Disabled
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
  policyRule:
    if:
      field: type
      equals: Microsoft.Resources/subscriptions
    then:
      effect: "[parameters('effect')]"
      details:
        type: Microsoft.Insights/logProfiles
        existenceCondition:
          allOf:
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: australiacentral
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: australiacentral2
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: australiaeast
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: australiasoutheast
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: brazilsouth
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: canadacentral
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: canadaeast
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: centralindia
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: centralus
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: eastasia
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: eastus
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: eastus2
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: francecentral
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: francesouth
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: japaneast
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: japanwest
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: koreacentral
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: koreasouth
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: northcentralus
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: northeurope
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: southafricanorth
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: southafricawest
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: southcentralus
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: southindia
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: southeastasia
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: uaecentral
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: uaenorth
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: uksouth
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: ukwest
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: westcentralus
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: westeurope
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: westindia
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: westus
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: westus2
          - not:
              field: Microsoft.Insights/logProfiles/locations[*]
              notEquals: global
id: "/providers/Microsoft.Authorization/policyDefinitions/41388f1c-2db0-4c25-95b2-35d7f5ccbfa9"
name: 41388f1c-2db0-4c25-95b2-35d7f5ccbfa9
properties:
  displayName: Azure Monitor log profile should collect logs for categories 'write,'
    'delete,' and 'action'
  policyType: BuiltIn
  mode: All
  description: This policy ensures that a log profile collects logs for categories
    'write,' 'delete,' and 'action'
  metadata:
    version: 1.0.0
    category: Monitoring
  parameters:
    effect:
      type: string
      defaultValue: AuditIfNotExists
      allowedValues:
      - AuditIfNotExists
      - Disabled
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
  policyRule:
    if:
      field: type
      equals: Microsoft.Resources/subscriptions
    then:
      effect: "[parameters('effect')]"
      details:
        type: Microsoft.Insights/logprofiles
        existenceCondition:
          allOf:
          - not:
              field: Microsoft.Insights/logProfiles/categories[*]
              notEquals: Write
          - not:
              field: Microsoft.Insights/logProfiles/categories[*]
              notEquals: Delete
          - not:
              field: Microsoft.Insights/logProfiles/categories[*]
              notEquals: Action
id: "/providers/Microsoft.Authorization/policyDefinitions/1a4e592a-6a6e-44a5-9814-e36264ca96e7"
name: 1a4e592a-6a6e-44a5-9814-e36264ca96e7
properties:
  displayName: Allowed storage account SKUs
  policyType: BuiltIn
  mode: Indexed
  description: This policy enables you to specify a set of storage account SKUs that
    your organization can deploy.
  metadata:
    version: 1.0.0
    category: Storage
  parameters:
    listOfAllowedSKUs:
      type: Array
      metadata:
        description: The list of SKUs that can be specified for storage accounts.
        displayName: Allowed SKUs
        strongType: StorageSKUs
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Storage/storageAccounts
      - not:
          field: Microsoft.Storage/storageAccounts/sku.name
          in: "[parameters('listOfAllowedSKUs')]"
    then:
      effect: Deny
id: "/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1"
name: 7433c107-6db4-4ad1-b57a-a76dce0154a1
properties:
  displayName: Secure transfer to storage accounts should be enabled
  policyType: BuiltIn
  mode: Indexed
  description: Audit requirement of Secure transfer in your storage account. Secure
    transfer is an option that forces your storage account to accept requests only
    from secure connections (HTTPS). Use of HTTPS ensures authentication between the
    server and the service and protects data in transit from network layer attacks
    such as man-in-the-middle, eavesdropping, and session-hijacking
  metadata:
    version: 1.0.1
    category: Storage
  parameters:
    effect:
      type: string
      defaultValue: Audit
      allowedValues:
      - Audit
      - Deny
      - Disabled
      metadata:
        displayName: Effect
        description: The effect determines what happens when the policy rule is evaluated
          to match
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Storage/storageAccounts
      - not:
          field: Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly
          equals: 'True'
    then:
      effect: "[parameters('effect')]"
id: "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9"
name: 404c3081-a854-4457-ae30-26a93ef643f9
properties:
  displayName: Audit unrestricted network access to storage accounts
  policyType: BuiltIn
  mode: Indexed
  description: Audit unrestricted network access in your storage account firewall
    settings. Instead, configure network rules so only applications from allowed networks
    can access the storage account. To allow connections from specific internet or
    on-premise clients, access can be granted to traffic from specific Azure virtual
    networks or to public internet IP address ranges
  metadata:
    version: 1.0.0
    category: Storage
  parameters:
    effect:
      type: string
      defaultValue: Audit
      allowedValues:
      - Audit
      - Disabled
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Storage/storageAccounts
      - field: Microsoft.Storage/storageAccounts/networkAcls.defaultAction
        equals: Allow
    then:
      effect: "[parameters('effect')]"
id: "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c"
name: 34c877ad-507e-4c82-993e-3452a6e0ad3c
#properties:
 # displayName: Deploy Advanced Threat Protection on Storage Accounts
  #policyType: BuiltIn
  #mode: Indexed
 # description: This policy enables Advanced Threat Protection on Storage Accounts.
 # metadata:
 #   version: 1.0.0
 #   category: Storage
 # parameters:
 #   effect:
 #     type: string
 #     defaultValue: DeployIfNotExists
 #     allowedValues:
 #     - DeployIfNotExists
 #     - Disabled
 #     metadata:
 #       displayName: Effect
 #       description: Enable or disable the execution of the policy
 # policyRule:
 #   if:
 #     field: type
 #     equals: Microsoft.Storage/storageAccounts
 #   then:
 #     effect: "[parameters('effect')]"
 #     details:
 #       type: Microsoft.Security/advancedThreatProtectionSettings
 #       name: current
 #       existenceCondition:
 #         field: Microsoft.Security/advancedThreatProtectionSettings/isEnabled
 #         equals: 'true'
 #       roleDefinitionIds:
 #       - "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
 #       deployment:
 #         properties:
 #           mode: incremental
 #           template:
 #             "$schema": http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
 #             contentVersion: 1.0.0.0
 #             parameters:
 #               storageAccountName:
 #                 type: string
 #             resources:
 #             - apiVersion: '2019-01-01'
 #               type: Microsoft.Storage/storageAccounts/providers/advancedThreatProtectionSettings
 #               name: "[concat(parameters('storageAccountName'), '/Microsoft.Security/current')]"
 #               properties:
 #                 isEnabled: true
 #           parameters:
 #             storageAccountName:
 #               value: "[field('name')]"
#id: "/providers/Microsoft.Authorization/policyDefinitions/361c2074-3595-4e5d-8cab-4f21dffc835c"
#name: 361c2074-3595-4e5d-8cab-4f21dffc835c
properties:
  displayName: Audit resource location matches resource group location
  policyType: BuiltIn
  mode: Indexed
  description: Audit that the resource location matches its resource group location
  metadata:
    version: 1.0.0
    category: General
  policyRule:
    if:
      field: location
      notIn:
      - "[resourcegroup().location]"
      - global
    then:
      effect: audit
id: "/providers/Microsoft.Authorization/policyDefinitions/0a914e76-4921-4c19-b460-a2d36003525a"
name: 0a914e76-4921-4c19-b460-a2d36003525a
properties:
  displayName: Automation account variables should be encrypted
  policyType: BuiltIn
  mode: All
  description: It is important to enable encryption of Automation account variable
    assets when storing sensitive data
  metadata:
    version: 1.0.0
    category: Automation
  parameters:
    effect:
      type: string
      defaultValue: Audit
      allowedValues:
      - Audit
      - Disabled
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Automation/automationAccounts/variables
      - field: Microsoft.Automation/automationAccounts/variables/isEncrypted
        notEquals: 'true'
    then:
      effect: "[parameters('effect')]"
id: "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735"
name: 3657f5a0-770e-44a3-b44e-9431ba1e9735
properties:
  displayName: Audit usage of custom RBAC rules
  policyType: BuiltIn
  mode: All
  description: Audit built-in roles such as 'Owner, Contributer, Reader' instead of
    custom RBAC roles, which are error prone. Using custom roles is treated as an
    exception and requires a rigorous review and threat modeling
  metadata:
    version: 1.0.0
    category: General
  parameters:
    effect:
      type: string
      defaultValue: Audit
      allowedValues:
      - Audit
      - Disabled
      metadata:
        displayName: Effect
        description: Enable or disable the execution of the policy
  policyRule:
    if:
      allOf:
      - field: type
        equals: Microsoft.Authorization/roleDefinitions
      - field: Microsoft.Authorization/roleDefinitions/type
        equals: CustomRole
    then:
      effect: "[parameters('effect')]"
id: "/providers/Microsoft.Authorization/policyDefinitions/a451c1ef-c6ca-483d-87ed-f49761e3ffb5"
name: a451c1ef-c6ca-483d-87ed-f49761e3ffb5
properties:
  displayName: Configure time zone on Windows machines.
  policyType: BuiltIn
  mode: Indexed
  description: This policy creates a Guest Configuration assignment to set specified
    time zone on Windows virtual machines.
  metadata:
    version: 1.0.0-preview
    category: Guest Configuration
    requiredProviders:
    - Microsoft.GuestConfiguration
    preview: true
  parameters:
    TimeZone:
      type: string
      metadata:
        displayName: Time zone
        description: The expected time zone
      allowedValues:
 #     - "(UTC-12:00) International Date Line West"
 #     - "(UTC-11:00) Coordinated Universal Time-11"
 #     - "(UTC-10:00) Aleutian Islands"
 #    - "(UTC-10:00) Hawaii"
 #   - "(UTC-09:30) Marquesas Islands"
 #     - "(UTC-09:00) Alaska"
 #     - "(UTC-09:00) Coordinated Universal Time-09"
 #     - "(UTC-08:00) Baja California"
 #     - "(UTC-08:00) Coordinated Universal Time-08"
 #     - "(UTC-08:00) Pacific Time (US & Canada)"
 #     - "(UTC-07:00) Arizona"
 #     - "(UTC-07:00) Chihuahua, La Paz, Mazatlan"
 #     - "(UTC-07:00) Mountain Time (US & Canada)"
 #     - "(UTC-06:00) Central America"
 #     - "(UTC-06:00) Central Time (US & Canada)"
 #     - "(UTC-06:00) Easter Island"
 #     - "(UTC-06:00) Guadalajara, Mexico City, Monterrey"
 #     - "(UTC-06:00) Saskatchewan"
 #     - "(UTC-05:00) Bogota, Lima, Quito, Rio Branco"
 #     - "(UTC-05:00) Chetumal"
 #     - "(UTC-05:00) Eastern Time (US & Canada)"
 #     - "(UTC-05:00) Haiti"
 #     - "(UTC-05:00) Havana"
 #     - "(UTC-05:00) Indiana (East)"
 #     - "(UTC-05:00) Turks and Caicos"
 #     - "(UTC-04:00) Asuncion"
 #     - "(UTC-04:00) Atlantic Time (Canada)"
 #     - "(UTC-04:00) Caracas"
 #     - "(UTC-04:00) Cuiaba"
 #     - "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan"
 #     - "(UTC-04:00) Santiago"
 #     - "(UTC-03:30) Newfoundland"
 #     - "(UTC-03:00) Araguaina"
 #     - "(UTC-03:00) Brasilia"
 #     - "(UTC-03:00) Cayenne, Fortaleza"
 #     - "(UTC-03:00) City of Buenos Aires"
 #     - "(UTC-03:00) Greenland"
 #     - "(UTC-03:00) Montevideo"
 #     - "(UTC-03:00) Punta Arenas"
 #     - "(UTC-03:00) Saint Pierre and Miquelon"
 #     - "(UTC-03:00) Salvador"
 #     - "(UTC-02:00) Coordinated Universal Time-02"
 #     - "(UTC-02:00) Mid-Atlantic - Old"
 #     - "(UTC-01:00) Azores"
 #     - "(UTC-01:00) Cabo Verde Is."
      - "(UTC) Coordinated Universal Time"
 #     - "(UTC+00:00) Dublin, Edinburgh, Lisbon, London"
 #     - "(UTC+00:00) Monrovia, Reykjavik"
 #     - "(UTC+00:00) Sao Tome"
 #     - "(UTC+01:00) Casablanca"
 #     - "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna"
 #     - "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"
 #     - "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris"
 #     - "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb"
 #     - "(UTC+01:00) West Central Africa"
 #     - "(UTC+02:00) Amman"
 #     - "(UTC+02:00) Athens, Bucharest"
 #     - "(UTC+02:00) Beirut"
 #     - "(UTC+02:00) Cairo"
 #     - "(UTC+02:00) Chisinau"
 #     - "(UTC+02:00) Damascus"
 #     - "(UTC+02:00) Gaza, Hebron"
 #     - "(UTC+02:00) Harare, Pretoria"
 #     - "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius"
 #     - "(UTC+02:00) Jerusalem"
 #     - "(UTC+02:00) Kaliningrad"
 #    - "(UTC+02:00) Khartoum"
 #     - "(UTC+02:00) Tripoli"
 #     - "(UTC+02:00) Windhoek"
 #     - "(UTC+03:00) Baghdad"
 #     - "(UTC+03:00) Istanbul"
 #     - "(UTC+03:00) Kuwait, Riyadh"
 #     - "(UTC+03:00) Minsk"
 #     - "(UTC+03:00) Moscow, St. Petersburg"
 #     - "(UTC+03:00) Nairobi"
 #     - "(UTC+03:30) Tehran"
 #     - "(UTC+04:00) Abu Dhabi, Muscat"
 #     - "(UTC+04:00) Astrakhan, Ulyanovsk"
 #     - "(UTC+04:00) Baku"
 #     - "(UTC+04:00) Izhevsk, Samara"
 #     - "(UTC+04:00) Port Louis"
 #     - "(UTC+04:00) Saratov"
 #     - "(UTC+04:00) Tbilisi"
 #     - "(UTC+04:00) Volgograd"
 #     - "(UTC+04:00) Yerevan"
 #     - "(UTC+04:30) Kabul"
 #     - "(UTC+05:00) Ashgabat, Tashkent"
 #     - "(UTC+05:00) Ekaterinburg"
 #     - "(UTC+05:00) Islamabad, Karachi"
 #     - "(UTC+05:00) Qyzylorda"
 #     - "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi"
 #     - "(UTC+05:30) Sri Jayawardenepura"
 #     - "(UTC+05:45) Kathmandu"
 #     - "(UTC+06:00) Astana"
 #     - "(UTC+06:00) Dhaka"
 #     - "(UTC+06:00) Omsk"
 #     - "(UTC+06:30) Yangon (Rangoon)"
 #     - "(UTC+07:00) Bangkok, Hanoi, Jakarta"
 #     - "(UTC+07:00) Barnaul, Gorno-Altaysk"
 #     - "(UTC+07:00) Hovd"
 #     - "(UTC+07:00) Krasnoyarsk"
 #     - "(UTC+07:00) Novosibirsk"
 #     - "(UTC+07:00) Tomsk"
 #     - "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi"
 #     - "(UTC+08:00) Irkutsk"
 #     - "(UTC+08:00) Kuala Lumpur, Singapore"
 #     - "(UTC+08:00) Perth"
 #     - "(UTC+08:00) Taipei"
 #     - "(UTC+08:00) Ulaanbaatar"
 #     - "(UTC+08:45) Eucla"
 #     - "(UTC+09:00) Chita"
 #     - "(UTC+09:00) Osaka, Sapporo, Tokyo"
 #     - "(UTC+09:00) Pyongyang"
 #     - "(UTC+09:00) Seoul"
 #     - "(UTC+09:00) Yakutsk"
 #     - "(UTC+09:30) Adelaide"
 #     - "(UTC+09:30) Darwin"
 #     - "(UTC+10:00) Brisbane"
 #    - "(UTC+10:00) Canberra, Melbourne, Sydney"
 #     - "(UTC+10:00) Guam, Port Moresby"
 #     - "(UTC+10:00) Hobart"
 #     - "(UTC+10:00) Vladivostok"
 #     - "(UTC+10:30) Lord Howe Island"
 #     - "(UTC+11:00) Bougainville Island"
 #     - "(UTC+11:00) Chokurdakh"
 #     - "(UTC+11:00) Magadan"
 #     - "(UTC+11:00) Norfolk Island"
 #     - "(UTC+11:00) Sakhalin"
 #     - "(UTC+11:00) Solomon Is., New Caledonia"
 #     - "(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky"
 #     - "(UTC+12:00) Auckland, Wellington"
 #     - "(UTC+12:00) Coordinated Universal Time+12"
 #     - "(UTC+12:00) Fiji"
 #     - "(UTC+12:00) Petropavlovsk-Kamchatsky - Old"
 #     - "(UTC+12:45) Chatham Islands"
 #     - "(UTC+13:00) Coordinated Universal Time+13"
 #     - "(UTC+13:00) Nuku'alofa"
 #     - "(UTC+13:00) Samoa"
 #     - "(UTC+14:00) Kiritimati Island"
  policyRule:
    if:
      anyOf:
      - allOf:
        - field: type
          equals: Microsoft.Compute/virtualMachines
        - anyOf:
          - field: Microsoft.Compute/imagePublisher
            in:
            - esri
            - incredibuild
            - MicrosoftDynamicsAX
            - MicrosoftSharepoint
            - MicrosoftVisualStudio
            - MicrosoftWindowsDesktop
            - MicrosoftWindowsServerHPCPack
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: MicrosoftWindowsServer
            - field: Microsoft.Compute/imageSKU
              notLike: 2008*
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: MicrosoftSQLServer
            - field: Microsoft.Compute/imageOffer
              notLike: SQL2008*
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: microsoft-dsvm
            - field: Microsoft.Compute/imageOffer
              equals: dsvm-windows
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: microsoft-ads
            - field: Microsoft.Compute/imageOffer
              in:
              - standard-data-science-vm
              - windows-data-science-vm
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: batch
            - field: Microsoft.Compute/imageOffer
              equals: rendering-windows2016
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: center-for-internet-security-inc
            - field: Microsoft.Compute/imageOffer
              like: cis-windows-server-201*
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: pivotal
            - field: Microsoft.Compute/imageOffer
              like: bosh-windows-server*
          - allOf:
            - field: Microsoft.Compute/imagePublisher
              equals: cloud-infrastructure-services
            - field: Microsoft.Compute/imageOffer
              like: ad*
          - allOf:
            - anyOf:
              - field: Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration
                exists: 'true'
              - field: Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType
                like: Windows*
            - anyOf:
              - field: Microsoft.Compute/imageSKU
                exists: 'false'
              - allOf:
                - field: Microsoft.Compute/imageSKU
                  notLike: 2008*
                - field: Microsoft.Compute/imageOffer
                  notLike: SQL2008*
      - allOf:
        - field: type
          equals: Microsoft.HybridCompute/machines
        - field: Microsoft.HybridCompute/imageOffer
          like: windows*
    then:
      effect: deployIfNotExists
      details:
        roleDefinitionIds:
        - "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
        type: Microsoft.GuestConfiguration/guestConfigurationAssignments
        name: SetWindowsTimeZone
        existenceCondition:
          allOf:
          - field: Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash
            equals: "[base64(concat('[WindowsTimeZone]WindowsTimeZone1;TimeZone',
              '=', parameters('TimeZone')))]"
          - field: Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus
            equals: Compliant
        deployment:
          properties:
            mode: incremental
            parameters:
              vmName:
                value: "[field('name')]"
              location:
                value: "[field('location')]"
              type:
                value: "[field('type')]"
              configurationName:
                value: SetWindowsTimeZone
              TimeZone:
                value: "[parameters('TimeZone')]"
            template:
              "$schema": https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
              contentVersion: 1.0.0.0
              parameters:
                vmName:
                  type: string
                location:
                  type: string
                type:
                  type: string
                configurationName:
                  type: string
                TimeZone:
                  type: string
              resources:
              - condition: "[equals(toLower(parameters('type')), toLower('microsoft.hybridcompute/machines'))]"
                apiVersion: '2018-11-20'
                type: Microsoft.HybridCompute/machines/providers/guestConfigurationAssignments
                name: "[concat(parameters('vmName'), '/Microsoft.GuestConfiguration/',
                  parameters('configurationName'))]"
                location: "[parameters('location')]"
                properties:
                  guestConfiguration:
                    name: "[parameters('configurationName')]"
                    version: 1.*
                    assignmentType: DeployAndAutoCorrect
                    configurationParameter:
                    - name: "[WindowsTimeZone]WindowsTimeZone1;TimeZone"
                      value: "[parameters('TimeZone')]"
              - condition: "[equals(toLower(parameters('type')), toLower('Microsoft.Compute/virtualMachines'))]"
                apiVersion: '2018-11-20'
                type: Microsoft.Compute/virtualMachines/providers/guestConfigurationAssignments
                name: "[concat(parameters('vmName'), '/Microsoft.GuestConfiguration/',
                  parameters('configurationName'))]"
                location: "[parameters('location')]"
                properties:
                  guestConfiguration:
                    name: "[parameters('configurationName')]"
                    version: 1.*
                    assignmentType: DeployAndAutoCorrect
                    configurationParameter:
                    - name: "[WindowsTimeZone]WindowsTimeZone1;TimeZone"
                      value: "[parameters('TimeZone')]"
id: "/providers/Microsoft.Authorization/policyDefinitions/6141c932-9384-44c6-a395-59e4c057d7c9"
name: 6141c932-9384-44c6-a395-59e4c057d7c9